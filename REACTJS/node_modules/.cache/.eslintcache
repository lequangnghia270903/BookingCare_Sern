[{"N:\\fullstack\\REACTJS\\src\\index.js":"1","N:\\fullstack\\REACTJS\\src\\serviceWorker.js":"2","N:\\fullstack\\REACTJS\\src\\redux.js":"3","N:\\fullstack\\REACTJS\\src\\containers\\App.js":"4","N:\\fullstack\\REACTJS\\src\\hoc\\IntlProviderWrapper.js":"5","N:\\fullstack\\REACTJS\\src\\hoc\\authentication.js":"6","N:\\fullstack\\REACTJS\\src\\routes\\Home.js":"7","N:\\fullstack\\REACTJS\\src\\routes\\System.js":"8","N:\\fullstack\\REACTJS\\src\\routes\\Login.js":"9","N:\\fullstack\\REACTJS\\src\\containers\\Header\\Header.js":"10","N:\\fullstack\\REACTJS\\src\\store\\actions\\actionTypes.js":"11","N:\\fullstack\\REACTJS\\src\\store\\reducers\\rootReducer.js":"12","N:\\fullstack\\REACTJS\\src\\components\\CustomToast.js":"13","N:\\fullstack\\REACTJS\\src\\components\\ConfirmModal.js":"14","N:\\fullstack\\REACTJS\\src\\utils\\index.js":"15","N:\\fullstack\\REACTJS\\src\\containers\\Header\\menuApp.js":"16","N:\\fullstack\\REACTJS\\src\\store\\reducers\\appReducer.js":"17","N:\\fullstack\\REACTJS\\src\\store\\reducers\\userReducer.js":"18","N:\\fullstack\\REACTJS\\src\\store\\reducers\\adminReducer.js":"19","N:\\fullstack\\REACTJS\\src\\components\\Navigator.js":"20","N:\\fullstack\\REACTJS\\src\\containers\\System\\UserManage.js":"21","N:\\fullstack\\REACTJS\\src\\containers\\System\\RegisterPackageGroupOrAcc.js":"22","N:\\fullstack\\REACTJS\\src\\containers\\System\\ProductManage.js":"23","N:\\fullstack\\REACTJS\\src\\services\\adminService.js":"24","N:\\fullstack\\REACTJS\\src\\components\\CustomScrollbars.js":"25","N:\\fullstack\\REACTJS\\src\\store\\actions\\index.js":"26","N:\\fullstack\\REACTJS\\src\\utils\\CommonUtils.js":"27","N:\\fullstack\\REACTJS\\src\\utils\\constant.js":"28","N:\\fullstack\\REACTJS\\src\\utils\\LanguageUtils.js":"29","N:\\fullstack\\REACTJS\\src\\utils\\KeyCodeUtils.js":"30","N:\\fullstack\\REACTJS\\src\\utils\\ToastUtil.js":"31","N:\\fullstack\\REACTJS\\src\\axios.js":"32","N:\\fullstack\\REACTJS\\src\\store\\actions\\appActions.js":"33","N:\\fullstack\\REACTJS\\src\\store\\actions\\userActions.js":"34","N:\\fullstack\\REACTJS\\src\\config.js":"35","N:\\fullstack\\REACTJS\\src\\containers\\Auth\\Login.js":"36","N:\\fullstack\\REACTJS\\src\\services\\index.js":"37","N:\\fullstack\\REACTJS\\src\\services\\userService.js":"38","N:\\fullstack\\REACTJS\\src\\containers\\System\\ModalUser.js":"39"},{"size":926,"mtime":1727458451342,"results":"40","hashOfConfig":"41"},{"size":5086,"mtime":1726934555008,"results":"42","hashOfConfig":"41"},{"size":1477,"mtime":1726934555006,"results":"43","hashOfConfig":"41"},{"size":2927,"mtime":1738750843096,"results":"44","hashOfConfig":"41"},{"size":1095,"mtime":1726934555004,"results":"45","hashOfConfig":"41"},{"size":789,"mtime":1738750840044,"results":"46","hashOfConfig":"41"},{"size":639,"mtime":1738750840025,"results":"47","hashOfConfig":"41"},{"size":1350,"mtime":1726934555008,"results":"48","hashOfConfig":"41"},{"size":5752,"mtime":1726934555007,"results":"49","hashOfConfig":"41"},{"size":1152,"mtime":1738750840025,"results":"50","hashOfConfig":"41"},{"size":397,"mtime":1738750686038,"results":"51","hashOfConfig":"41"},{"size":1006,"mtime":1738750562055,"results":"52","hashOfConfig":"41"},{"size":2282,"mtime":1726934554995,"results":"53","hashOfConfig":"41"},{"size":3862,"mtime":1726934554993,"results":"54","hashOfConfig":"41"},{"size":249,"mtime":1726934555019,"results":"55","hashOfConfig":"41"},{"size":735,"mtime":1726934555002,"results":"56","hashOfConfig":"41"},{"size":967,"mtime":1726934555013,"results":"57","hashOfConfig":"41"},{"size":830,"mtime":1738750201038,"results":"58","hashOfConfig":"41"},{"size":837,"mtime":1726934555012,"results":"59","hashOfConfig":"41"},{"size":9326,"mtime":1726934554999,"results":"60","hashOfConfig":"41"},{"size":4607,"mtime":1741614401269,"results":"61","hashOfConfig":"41"},{"size":638,"mtime":1726934555003,"results":"62","hashOfConfig":"41"},{"size":655,"mtime":1738789113161,"results":"63","hashOfConfig":"41"},{"size":361,"mtime":1726934555009,"results":"64","hashOfConfig":"41"},{"size":3173,"mtime":1726934554994,"results":"65","hashOfConfig":"41"},{"size":94,"mtime":1738750398318,"results":"66","hashOfConfig":"41"},{"size":156,"mtime":1726934555018,"results":"67","hashOfConfig":"41"},{"size":400,"mtime":1726934555019,"results":"68","hashOfConfig":"41"},{"size":961,"mtime":1726934555019,"results":"69","hashOfConfig":"41"},{"size":684,"mtime":1726934555018,"results":"70","hashOfConfig":"41"},{"size":3001,"mtime":1726934555019,"results":"71","hashOfConfig":"41"},{"size":395,"mtime":1728556797384,"results":"72","hashOfConfig":"41"},{"size":317,"mtime":1726934555011,"results":"73","hashOfConfig":"41"},{"size":412,"mtime":1738750546588,"results":"74","hashOfConfig":"41"},{"size":445,"mtime":1726934555000,"results":"75","hashOfConfig":"41"},{"size":5790,"mtime":1738751066633,"results":"76","hashOfConfig":"41"},{"size":57,"mtime":1726934555009,"results":"77","hashOfConfig":"41"},{"size":749,"mtime":1741614326711,"results":"78","hashOfConfig":"41"},{"size":4760,"mtime":1741612872489,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"5egccw",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},"N:\\fullstack\\REACTJS\\src\\index.js",[],["172","173"],"N:\\fullstack\\REACTJS\\src\\serviceWorker.js",[],"N:\\fullstack\\REACTJS\\src\\redux.js",[],"N:\\fullstack\\REACTJS\\src\\containers\\App.js",[],"N:\\fullstack\\REACTJS\\src\\hoc\\IntlProviderWrapper.js",[],"N:\\fullstack\\REACTJS\\src\\hoc\\authentication.js",[],"N:\\fullstack\\REACTJS\\src\\routes\\Home.js",[],"N:\\fullstack\\REACTJS\\src\\routes\\System.js",[],"N:\\fullstack\\REACTJS\\src\\routes\\Login.js",["174","175","176"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { push } from \"connected-react-router\";\r\n\r\nimport * as actions from \"../store/actions\";\r\nimport { KeyCodeUtils, LanguageUtils } from \"../utils\";\r\n\r\nimport userIcon from '../../src/assets/images/user.svg';\r\nimport passIcon from '../../src/assets/images/pass.svg';\r\nimport './Login.scss';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport adminService from '../services/adminService';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.btnLogin = React.createRef();\r\n    }\r\n\r\n    initialState = {\r\n        username: '',\r\n        password: '',\r\n        loginError: ''\r\n    }\r\n\r\n    state = {\r\n        ...this.initialState\r\n    };\r\n\r\n    refresh = () => {\r\n        this.setState({\r\n            ...this.initialState\r\n        })\r\n    }\r\n\r\n    onUsernameChange = (e) => {\r\n        this.setState({ username: e.target.value })\r\n    }\r\n\r\n    onPasswordChange = (e) => {\r\n        this.setState({ password: e.target.value })\r\n    }\r\n\r\n    redirectToSystemPage = () => {\r\n        const { navigate } = this.props;\r\n        const redirectPath = '/system/user-manage';\r\n        navigate(`${redirectPath}`);\r\n    }\r\n\r\n    processLogin = () => {\r\n        const { username, password } = this.state;\r\n\r\n        const { adminLoginSuccess, adminLoginFail } = this.props;\r\n        let loginBody = {\r\n            username: 'admin',\r\n            password: '123456'\r\n        }\r\n        //sucess\r\n        let adminInfo = {\r\n            \"tlid\": \"0\",\r\n            \"tlfullname\": \"Administrator\",\r\n            \"custype\": \"A\",\r\n            \"accessToken\": \"eyJhbGciOiJIU\"\r\n        }\r\n\r\n        adminLoginSuccess(adminInfo);\r\n        this.refresh();\r\n        this.redirectToSystemPage();\r\n        try {\r\n            adminService.login(loginBody)\r\n        } catch (e) {\r\n            console.log('error login : ', e)\r\n        }\r\n\r\n    }\r\n\r\n    handlerKeyDown = (event) => {\r\n        const keyCode = event.which || event.keyCode;\r\n        if (keyCode === KeyCodeUtils.ENTER) {\r\n            event.preventDefault();\r\n            if (!this.btnLogin.current || this.btnLogin.current.disabled) return;\r\n            this.btnLogin.current.click();\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handlerKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handlerKeyDown);\r\n        // fix Warning: Can't perform a React state update on an unmounted component\r\n        this.setState = (state, callback) => {\r\n            return;\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { username, password, loginError } = this.state;\r\n        const { lang } = this.props;\r\n\r\n        return (\r\n            <div className=\"login-wrapper\">\r\n                <div className=\"login-container\">\r\n                    <div className=\"form_login\">\r\n                        <h2 className=\"title\">\r\n                            <FormattedMessage id=\"login.login\" />\r\n                        </h2>\r\n                        <div className=\"form-group icon-true\">\r\n                            <img className=\"icon\" src={userIcon} alt=\"this\" />\r\n                            <input\r\n                                placeholder={LanguageUtils.getMessageByKey(\"login.username\", lang)}\r\n                                id=\"username\"\r\n                                name=\"username\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={username}\r\n                                onChange={this.onUsernameChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div id=\"phone-input-container\" className=\"form-group icon-true\">\r\n                            <img className=\"icon\" src={passIcon} alt=\"this\" />\r\n                            <input\r\n                                placeholder={LanguageUtils.getMessageByKey(\"login.password\", lang)}\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                value={password}\r\n                                onChange={this.onPasswordChange}\r\n                            />\r\n                        </div>\r\n\r\n                        {loginError !== '' && (\r\n                            <div className='login-error'>\r\n                                <span className='login-error-message'>{loginError}</span>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"form-group login\">\r\n                            <input\r\n                                ref={this.btnLogin}\r\n                                id=\"btnLogin\"\r\n                                type=\"submit\"\r\n                                className=\"btn\"\r\n                                value={LanguageUtils.getMessageByKey(\"login.login\", lang)}\r\n                                onClick={this.processLogin}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        navigate: (path) => dispatch(push(path)),\r\n        adminLoginSuccess: (adminInfo) => dispatch(actions.adminLoginSuccess(adminInfo)),\r\n        adminLoginFail: () => dispatch(actions.adminLoginFail()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n",["177","178"],"N:\\fullstack\\REACTJS\\src\\containers\\Header\\Header.js",[],"N:\\fullstack\\REACTJS\\src\\store\\actions\\actionTypes.js",[],"N:\\fullstack\\REACTJS\\src\\store\\reducers\\rootReducer.js",["179","180"],"import {combineReducers} from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport appReducer from \"./appReducer\";\r\nimport adminReducer from \"./adminReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer } from 'redux-persist';\r\n\r\nconst persistCommonConfig = {\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2,\r\n};\r\n\r\n// const adminPersistConfig = {\r\n//     ...persistCommonConfig,\r\n//     key: 'admin',\r\n//     whitelist: ['isLoggedIn', 'adminInfo']\r\n// };\r\nconst userPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'user',\r\n    whitelist: ['isLoggedIn', 'userInfo']\r\n};\r\n\r\nexport default (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    // admin: persistReducer(adminPersistConfig, adminReducer),\r\n    user: persistReducer(userPersistConfig, userReducer),\r\n    app: appReducer\r\n})","N:\\fullstack\\REACTJS\\src\\components\\CustomToast.js",[],"N:\\fullstack\\REACTJS\\src\\components\\ConfirmModal.js",[],"N:\\fullstack\\REACTJS\\src\\utils\\index.js",[],"N:\\fullstack\\REACTJS\\src\\containers\\Header\\menuApp.js",[],"N:\\fullstack\\REACTJS\\src\\store\\reducers\\appReducer.js",[],"N:\\fullstack\\REACTJS\\src\\store\\reducers\\userReducer.js",[],"N:\\fullstack\\REACTJS\\src\\store\\reducers\\adminReducer.js",[],"N:\\fullstack\\REACTJS\\src\\components\\Navigator.js",[],"N:\\fullstack\\REACTJS\\src\\containers\\System\\UserManage.js",["181"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport \"./userManage.scss\";\r\nimport {getAllUsers, createNewUserService, deleteUserService} from \"../../services/userService\"\r\nimport ModalUser from './ModalUser'\r\nclass UserManage extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            arrUsers: [],\r\n            isOpenModalUser: false,\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getAllUsersFromReact();\r\n    }\r\n    \r\n    getAllUsersFromReact = async() =>{\r\n        let response = await getAllUsers('ALL');\r\n        console.log('get user from node.js:', response)\r\n        if(response && response.errCode===0){\r\n            this.setState({\r\n                arrUsers: response.users\r\n            })\r\n        }\r\n    }\r\n\r\n    handleAddNewUser = () =>{\r\n        this.setState({\r\n            isOpenModalUser:true,\r\n        })\r\n    }\r\n\r\n\r\n    toggleUserModal =() => {\r\n        this.setState({\r\n            isOpenModalUser: !this.state.isOpenModalUser,\r\n        })\r\n    }\r\n\r\n    createNewUser = async(data) =>{\r\n        try {\r\n            let response = await createNewUserService(data);\r\n            if (response && response.errCode !== 0){\r\n                alert(response.errMessage)\r\n            }else {\r\n                await this.getAllUsersFromReact();\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    handldeDeleteUser =async(user) =>{\r\n        console.log('click delete',user)\r\n        try {\r\n            let res = await deleteUserService(user.id);\r\n            if(res && res.errCode === 0){\r\n                await this.getAllUsersFromReact();\r\n            }\r\n            else{\r\n                alert(res.errMessage);\r\n            }\r\n            console.log(res)\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    /** Life CycleCycle\r\n     * Run component:\r\n     * 1.run constructor -> init state\r\n     * 2. Did mount(set state): born unmount\r\n     * 3. Render(re-render)\r\n     * \r\n     * \r\n     * \r\n     * \r\n     * \r\n     */\r\n\r\n    render() {\r\n        console.log('check render', this.state)\r\n        let arrUsers = this.state.arrUsers;\r\n        //properties; nested\r\n        return (\r\n            <div className=\"user-container\">\r\n                <ModalUser\r\n                    isOpen = {this.state.isOpenModalUser}\r\n                    toggleFromParent ={this.toggleUserModal}\r\n                    createNewUser ={this.createNewUser}\r\n                />\r\n                <div className='title text-center'>Manage user with Nghia</div>\r\n                <div className='mx-1'>\r\n                    <button className='btn btn-primary px-3'\r\n                    onClick={() => this.handleAddNewUser()}><i className=\"fas fa-plus\"></i>Add new user</button>\r\n                </div>\r\n                <div className='users-table mt-3 mx-1'>\r\n                    <table id=\"customers\">\r\n                        <tbody>\r\n                        <tr>\r\n                            <th>Email</th>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                            <th>Adress</th>\r\n                            <th>Actiones</th>\r\n                        </tr>\r\n                            {arrUsers && arrUsers.map((item,index) =>{\r\n                            return (\r\n                                <tr>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.firstName}</td>\r\n                                    <td>{item.lastName}</td>\r\n                                    <td>{item.address}</td>\r\n                                    <td>\r\n                                        <button className=\"btn-edit\"><i  className=\"fas fa-pencil-alt\"></i></button>\r\n                                        <button className=\"btn-delete\" onClick={() => this.handldeDeleteUser(item)}><i  className=\"fas fa-trash-alt\"></i></button>\r\n                                    </td>\r\n                                </tr>\r\n                                )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                            \r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\r\n","N:\\fullstack\\REACTJS\\src\\containers\\System\\RegisterPackageGroupOrAcc.js",["182","183"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nclass RegisterPackageGroupOrAcc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center\">\r\n                register package group or account\r\n            </div>)\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPackageGroupOrAcc);\r\n","N:\\fullstack\\REACTJS\\src\\containers\\System\\ProductManage.js",["184","185","186","187","188","189"],"import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nclass ProductManage extends Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center\" >Manage products</div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductManage);\r\n","N:\\fullstack\\REACTJS\\src\\services\\adminService.js",["190"],"import axios from '../axios';\r\nimport * as queryString from 'query-string';\r\n\r\nconst adminService = {\r\n\r\n    /**\r\n     * Đăng nhập hệ thống\r\n     * {\r\n     *  \"username\": \"string\",\r\n     *  \"password\": \"string\"\r\n     * }\r\n     */\r\n    login(loginBody) {\r\n        return axios.post(`/admin/login`, loginBody)\r\n    },\r\n\r\n};\r\n\r\nexport default adminService;",["191","192"],"N:\\fullstack\\REACTJS\\src\\components\\CustomScrollbars.js",[],"N:\\fullstack\\REACTJS\\src\\store\\actions\\index.js",[],"N:\\fullstack\\REACTJS\\src\\utils\\CommonUtils.js",[],"N:\\fullstack\\REACTJS\\src\\utils\\constant.js",[],"N:\\fullstack\\REACTJS\\src\\utils\\LanguageUtils.js",[],"N:\\fullstack\\REACTJS\\src\\utils\\KeyCodeUtils.js",[],"N:\\fullstack\\REACTJS\\src\\utils\\ToastUtil.js",[],"N:\\fullstack\\REACTJS\\src\\axios.js",["193","194"],"import axios from 'axios';\r\nimport _ from 'lodash';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n    // withCredentials: true\r\n});\r\n\r\n\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        // Thrown error for request with OK status code\r\n        const { data } = response;\r\n        return response.data;\r\n    }\r\n);\r\nexport default instance;","N:\\fullstack\\REACTJS\\src\\store\\actions\\appActions.js",[],"N:\\fullstack\\REACTJS\\src\\store\\actions\\userActions.js",[],"N:\\fullstack\\REACTJS\\src\\config.js",["195"],"export default {\r\n    api: {\r\n        API_BASE_URL: \"http://localhost:8080/\",\r\n        ROUTER_BASE_NAME: null,\r\n    },\r\n    app: {\r\n        /**\r\n         * The base URL for all locations. If your app is served from a sub-directory on your server, you'll want to set\r\n         * this to the sub-directory. A properly formatted basename should have a leading slash, but no trailing slash.\r\n         */\r\n        ROUTER_BASE_NAME: null,\r\n    }\r\n};\r\n",["196","197"],"N:\\fullstack\\REACTJS\\src\\containers\\Auth\\Login.js",["198"],"/* eslint-disable no-undef */\r\nimport React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { push } from \"connected-react-router\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGooglePlusG, faFacebook } from '@fortawesome/free-brands-svg-icons';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { handleLoginApi } from \"../../services/userService\"\r\nimport * as actions from \"../../store/actions\";\r\n\r\nimport './Login.scss';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            isshowpassword: false,\r\n            errMessage: ''\r\n        }\r\n    }\r\n\r\n    handleOnChangeUserName = (event) =>{\r\n        this.setState({\r\n            username: event.target.value\r\n            //được sử dụng để cập nhật state của một component khi có sự thay đổi từ đầu vào (input), chẳng hạn như từ một ô nhập liệu.\r\n        })\r\n    }\r\n    handleOnChangePassword = (event) =>{\r\n        this.setState({\r\n            password: event.target.value\r\n            //được sử dụng để cập nhật state của một component khi có sự thay đổi từ đầu vào (input), chẳng hạn như từ một ô nhập liệu.\r\n        })      \r\n    }\r\n    \r\n    handleLogin = async() => {\r\n        this.setState({\r\n            errMessage: ''\r\n        })\r\n\r\n        console.log('username: ', this.state.username, 'password: ', this.state.password)\r\n        console.log('All state', this.state)\r\n        try {\r\n            let data = await handleLoginApi(this.state.username, this.state.password);\r\n            if(data && data.errCode !== 0){\r\n                this.setState({\r\n                    errMessage: data.errMessage\r\n                }) \r\n            }\r\n            if(data && data.errCode === 0){\r\n                this.props.userLoginSuccess(data.user)\r\n                console.log(\"login succed!\")\r\n            }\r\n        } catch (error) {\r\n            if(error.response){\r\n                if(error.response.data){\r\n                    this.setState({\r\n                        errMessage: error.response.data.message\r\n                    })\r\n                }\r\n            }\r\n            console.log('nghiale', error.response);\r\n        }\r\n    }\r\n    handleHidePassword =() => {\r\n        this.setState({\r\n            isshowpassword: !this.state.isshowpassword\r\n        })\r\n    }\r\n    render() {\r\n        //JSX\r\n        return (\r\n            <div className='login_background'>\r\n                <div className='login_container'>\r\n                    <div className='login_content row'>\r\n                        <div className='col-12 text-login'>Login</div>\r\n                        <div className='col-12 login-input'>\r\n                            <label>User Name:</label>\r\n                            <input type='text' \r\n                            className='form-control' \r\n                            placeholder='Enter your User Name'\r\n                            value={this.state.username}\r\n                            onChange={(event) => this.handleOnChangeUserName(event)}></input>\r\n                        </div>\r\n                        <div className='col-12 login-input'>\r\n                            <label>Password:</label>\r\n                            <div className='custom-input-password'>\r\n                                <input type={ this.state.isshowpassword ? 'text' : 'password'} \r\n                                className='form-control' \r\n                                placeholder='Enter your User Pasword'\r\n                                onChange={(event) => {this.handleOnChangePassword(event)}}\r\n                            ></input>\r\n                            <span onClick={() => {this.handleHidePassword()}}>\r\n                                <FontAwesomeIcon className='iconeya' icon={this.state.isshowpassword ? faEye : faEyeSlash} />\r\n                            </span>\r\n                        </div>\r\n\r\n                        </div>\r\n                        <div className='col-12' style={{color:'red'}}>\r\n                            {this.state.errMessage}\r\n                        </div>\r\n                        <div className='col-12'>\r\n                            <button className='btn-login' onClick={() => {this.handleLogin()}}>LogIn</button>\r\n                        </div>\r\n                        <div className='col-12'>\r\n                            <span className='forgot-password'>Forgot your password</span>\r\n                        </div>\r\n                        <div className='col-12 text-center mt-3'>\r\n                            <span className='forgot-password'>Or Login with:</span>\r\n                        </div>\r\n                        <div className='col-12 social-login'>\r\n                            <FontAwesomeIcon className=\"google\" icon={faGooglePlusG} />\r\n                            <FontAwesomeIcon className='facebook' icon={faFacebook} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        navigate: (path) => dispatch(push(path)),\r\n        // adminLoginSuccess: (adminInfo) => dispatch(actions.adminLoginSuccess(adminInfo)),\r\n        // userLoginFail: () => dispatch(actions.adminLoginFail()),\r\n        userLoginSuccess: (userInfor) => dispatch(actions.userLoginSuccess(userInfor))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","N:\\fullstack\\REACTJS\\src\\services\\index.js",[],"N:\\fullstack\\REACTJS\\src\\services\\userService.js",[],"N:\\fullstack\\REACTJS\\src\\containers\\System\\ModalUser.js",["199"],"import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport \"./userManage.scss\";\r\n\r\n\r\nclass ModalUser extends Component {\r\n\r\n   constructor(props){\r\n      super(props);\r\n      this.state ={\r\n         email: '',\r\n         password: '',\r\n         firstName: '',\r\n         lastName: '',\r\n         address: ''\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n      console.log('mouting modadl')\r\n    }\r\n\r\n    toggle =() =>{\r\n      this.props.toggleFromParent();\r\n    }\r\n\r\n    handleOnChageInput = (event,id) =>{\r\n      //bad code\r\n      // this.state[id] = event.target.value;\r\n      // this.setState({\r\n      //    ...this.state\r\n      // }, () =>{\r\n      //    console.log('check bad state:', this.state)\r\n      // })\r\n\r\n      //good code\r\n      let copyState ={...this.state};\r\n      copyState[id] = event.target.value;\r\n\r\n      this.setState({\r\n         ...copyState\r\n      }, () =>{\r\n         console.log('check bad state:', this.state)\r\n      })\r\n    }\r\n\r\n   checkValidateInput = () =>{\r\n      let isValid = true;\r\n      let arrInput =['email','password', 'firstName','lastName','address'];\r\n      for(let i=0;  i<arrInput.length;i++){\r\n         if(!this.state[arrInput[i]]){\r\n            isValid = false;\r\n            alert('Missing parameter: '+ arrInput[i]);\r\n            break;\r\n         }\r\n      }\r\n      return isValid;\r\n   }\r\n   handleAddNewUser = () =>{\r\n     let isValid = this.checkValidateInput();\r\n      if(isValid === true){\r\n         //call api create modal\r\n         this.props.createNewUser(this.state,\"abc\");\r\n      }\r\n   \r\n   }\r\n    render() {\r\n      console.log('check child props', this.props);\r\n      console.log('check child open modal', this.props.isOpen);\r\n        return (\r\n            <Modal \r\n               isOpen={this.props.isOpen} \r\n               toggle={() => {this.toggle()}} \r\n               className='modal-user-container'\r\n               size =\"lg\"\r\n            >\r\n               <ModalHeader toggle={() => {this.toggle()}}>Create a New User</ModalHeader>\r\n               <ModalBody>\r\n               <div className='modal-user-body'>\r\n                  <div className='input-container'>\r\n                     <label>Email: </label>\r\n                     <input \r\n                     type=\"text\" \r\n                     onChange={(event) => {this.handleOnChageInput(event,\"email\")}}\r\n                     value={this.state.email}\r\n                     />\r\n                  </div>\r\n                  <div className='input-container'>\r\n                     <label>Password: </label>\r\n                     <input \r\n                     type=\"password\"  \r\n                     onChange={(event) => {this.handleOnChageInput(event,\"password\")}}\r\n                     value={this.state.password}\r\n                     />\r\n                  </div>\r\n                  <div className='input-container'>\r\n                     <label>First Name: </label>\r\n                     <input \r\n                     type=\"text\"\r\n                     onChange={(event) => {this.handleOnChageInput(event,\"firstName\")}}\r\n                     value={this.state.firstName}\r\n                     />\r\n                  </div> \r\n                  <div className='input-container'>\r\n                     <label>Last Name: </label>\r\n                     <input \r\n                     type=\"text\"\r\n                     onChange={(event) => {this.handleOnChageInput(event,\"lastName\")}}\r\n                     value={this.state.lastName}\r\n                     />\r\n                  </div>\r\n                  <div className='input-container max-width-input'>\r\n                     <label>Adress: </label>\r\n                     <input \r\n                     type=\"text\"\r\n                     onChange={(event) => {this.handleOnChageInput(event,\"address\")}}\r\n                     value={this.state.address}\r\n                     />\r\n                  </div>    \r\n               </div>\r\n               \r\n                        \r\n               </ModalBody>\r\n               <ModalFooter>\r\n                  <Button \r\n                  color=\"primary\" \r\n                  className=\"px-3\" \r\n                  onClick={() => {this.handleAddNewUser()}}\r\n                  >Add New</Button>{' '}\r\n                  <Button color=\"secondary\" className=\"px-3\" onClick={() => {this.toggle()}}>Cancel</Button>\r\n               </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":52,"column":17,"nodeType":"206","messageId":"207","endLine":52,"endColumn":25},{"ruleId":"204","severity":1,"message":"208","line":52,"column":27,"nodeType":"206","messageId":"207","endLine":52,"endColumn":35},{"ruleId":"204","severity":1,"message":"209","line":54,"column":36,"nodeType":"206","messageId":"207","endLine":54,"endColumn":50},{"ruleId":"200","replacedBy":"210"},{"ruleId":"202","replacedBy":"211"},{"ruleId":"204","severity":1,"message":"212","line":5,"column":8,"nodeType":"206","messageId":"207","endLine":5,"endColumn":20},{"ruleId":"213","severity":1,"message":"214","line":28,"column":1,"nodeType":"215","endLine":33,"endColumn":3},{"ruleId":"204","severity":1,"message":"216","line":2,"column":10,"nodeType":"206","messageId":"207","endLine":2,"endColumn":26},{"ruleId":"204","severity":1,"message":"216","line":2,"column":10,"nodeType":"206","messageId":"207","endLine":2,"endColumn":26},{"ruleId":"217","severity":1,"message":"218","line":6,"column":5,"nodeType":"219","messageId":"220","endLine":9,"endColumn":6},{"ruleId":"204","severity":1,"message":"221","line":2,"column":10,"nodeType":"206","messageId":"207","endLine":2,"endColumn":16},{"ruleId":"204","severity":1,"message":"222","line":2,"column":18,"nodeType":"206","messageId":"207","endLine":2,"endColumn":23},{"ruleId":"204","severity":1,"message":"223","line":2,"column":25,"nodeType":"206","messageId":"207","endLine":2,"endColumn":36},{"ruleId":"204","severity":1,"message":"224","line":2,"column":38,"nodeType":"206","messageId":"207","endLine":2,"endColumn":47},{"ruleId":"204","severity":1,"message":"225","line":2,"column":49,"nodeType":"206","messageId":"207","endLine":2,"endColumn":60},{"ruleId":"204","severity":1,"message":"216","line":3,"column":10,"nodeType":"206","messageId":"207","endLine":3,"endColumn":26},{"ruleId":"204","severity":1,"message":"226","line":2,"column":13,"nodeType":"206","messageId":"207","endLine":2,"endColumn":24},{"ruleId":"200","replacedBy":"227"},{"ruleId":"202","replacedBy":"228"},{"ruleId":"204","severity":1,"message":"229","line":2,"column":8,"nodeType":"206","messageId":"207","endLine":2,"endColumn":9},{"ruleId":"204","severity":1,"message":"230","line":14,"column":17,"nodeType":"206","messageId":"207","endLine":14,"endColumn":21},{"ruleId":"213","severity":1,"message":"231","line":1,"column":1,"nodeType":"215","endLine":13,"endColumn":3},{"ruleId":"200","replacedBy":"232"},{"ruleId":"202","replacedBy":"233"},{"ruleId":"204","severity":1,"message":"216","line":14,"column":10,"nodeType":"206","messageId":"207","endLine":14,"endColumn":26},{"ruleId":"204","severity":1,"message":"216","line":3,"column":10,"nodeType":"206","messageId":"207","endLine":3,"endColumn":26},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"no-unused-vars","'username' is assigned a value but never used.","Identifier","unusedVar","'password' is assigned a value but never used.","'adminLoginFail' is assigned a value but never used.",["234"],["235"],"'adminReducer' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'FormattedMessage' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Button' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'queryString' is defined but never used.",["234"],["235"],"'_' is defined but never used.","'data' is assigned a value but never used.","Assign object to a variable before exporting as module default",["234"],["235"],"no-global-assign","no-unsafe-negation"]